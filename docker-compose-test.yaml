name: test-asig
services:
  test-web:
    build:
      context: ./web
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - web/.env.test
    depends_on:
      - test-api
    ports:
      - "3001:3000"

  test-api:
    build: .
    restart: unless-stopped
    env_file:
      - .env.test
    environment:
      MINIO_ENDPOINT: test-minio:9000
      SQL_HOST: host.docker.internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health" ]
    ports:
      - "8001:8000"
    depends_on:
      test-minio:
        condition: service_healthy

  test-celery-worker:
    build: .
    restart: unless-stopped
    command: celery -A config worker --loglevel=info
    env_file:
      - .env.test
    environment:
      MINIO_ENDPOINT: test-minio:9000
      SQL_HOST: host.docker.internal

  test-celery-beat:
    build: .
    restart: unless-stopped
    command: celery -A config beat --loglevel=info
    env_file:
      - .env.test
    environment:
      MINIO_ENDPOINT: test-minio:9000
      SQL_HOST: host.docker.internal

  test-minio:
    image: bitnami/minio:latest
    restart: unless-stopped
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "9011:9001"
      - "9010:9000"
