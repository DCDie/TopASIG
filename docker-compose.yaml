services:
  nginx-proxy:
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - "${NGINX_PROXY_PORT:-80}:80"
      - "${NGINX_PROXY_PORt_81:-81}:81"
      - "${NGINX_PROXY_PORT_SSL:-443}:443"
    env_file:
      - .env
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    depends_on:
      - api

  api:
    build: .
    env_file:
      - .env
    environment:
      SQL_HOST: db
      MINIO_ENDPOINT: minio:9000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://api:8000/api/health" ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  celery-worker:
    build: .
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    environment:
      SQL_HOST: db
      MINIO_ENDPOINT: minio:9000
    depends_on:
      api:
        condition: service_healthy

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    env_file:
      - .env
    environment:
      SQL_HOST: db
      MINIO_ENDPOINT: minio:9000
    depends_on:
      api:
        condition: service_healthy

  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_DB: ${SQL_NAME}
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${SQL_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432

  redis:
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 6379:6379

  minio:
    image: bitnami/minio:latest
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - 9000:9000
      - 9001:9001

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  data:
  minio_data:

