services:
  api:
    build: .
    ports:
      - "${API_PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      SQL_HOST: db
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  celery-worker:
    build: .
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    environment:
      SQL_HOST: db
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    env_file:
      - .env
    environment:
      SQL_HOST: db
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_DB: ${SQL_DB}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${SQL_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${SQL_PORT:-5432}:5432"

  rabbitmq:
    image: rabbitmq:4-management
    hostname: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5